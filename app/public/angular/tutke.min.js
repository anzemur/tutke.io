!function(){angular.module("tutke",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"index/index.component.html",controller:"indexCtrl",controllerAs:"vm"}).when("/login",{templateUrl:"authentication/log-in/log-in.component.html",controller:"loginInCtrl",controllerAs:"vm"}).otherwise({redirecTo:"/"}),t.html5Mode(!0)}])}(),angular.module("tutke").directive("foot",function(){return{restrict:"EA",templateUrl:"/shared/directives/foot/foot.component.html"}}),angular.module("tutke").directive("navigation",function(){return{restrict:"EA",templateUrl:"/shared/directives/navigation/navigation.component.html"}}),function(){function e(e,t){var n=function(t){e.localStorage.jwt=t},o=function(){return e.localStorage.jwt},r=function(){var t=o();return!!t&&JSON.parse(e.atob(t.split(".")[1])).exDate>Date.now()/1e3};return{saveToken:n,getToken:o,doRegister:function(e){return t.post("/api/register",e).then(function(e){n(e.data.token)})},doLogIn:function(e){return t.post("/api/login",e).then(function(e){n(e.data.token)})},doLogOut:function(){e.localStorage.removeItem("token")},isLoggedIn:r,getCurrentUser:function(){if(r()){var n=o(),a=JSON.parse(e.atob(n.split(".")[1]));return t.get("/api/users/"+a._id,{params:{populate:!0}})}}}}e.$inject=["$window","$http"],angular.module("tutke").service("authentication",e)}(),function(){function e(e,t){return{getLecturesPaginated:function(e){return t.get("/api/lectures/",{params:{populate:!0,page:e.page,search:e.search,lectureType:e.lectureType}})}}}e.$inject=["$window","$http"],angular.module("tutke").service("lectures",e)}(),(()=>{function e(e,t,n){var o=this;o.lecturesError="",o.isLoggedIn=t.isLoggedIn(),o.pagination={search:"",page:0,lectureType:"posted"},o.getLecturesPaginated=function(){n.getLecturesPaginated(o.pagination).then(function(e){o.lectures=e.data},function(e){o.lecturesError=e.e,console.log(e.e)})},o.doSearch=function(){o.pagination.page=0,o.getLecturesPaginated()},o.changeLectureType=function(e){o.pagination.lectureType!=e&&(o.pagination.lectureType="posted"==o.pagination.lectureType?"requested":"posted",o.getLecturesPaginated())},o.changePage=function(e){e?o.pagination.page++:o.pagination.page--,o.getLecturesPaginated()},o.isLoggedIn&&t.getCurrentUser().then(function(e){o.user=e.data},function(e){o.isLoggedIn=!1,t.doLogOut(),console.log(e.e)}),o.getLecturesPaginated()}e.$inject=["$location","authentication","lectures"],angular.module("tutke").controller("indexCtrl",e)})(),function(){function e(e,t){var n=this;n.logInData={username:"",password:""},n.logInError="",n.indexPage=e.search().page||"/",n.checkLogInData=function(){if(n.logInError="",!n.logInData.username||!n.logInData.password)return n.logInError="Please enter username and password then try again.",!1;n.doLogIn()},n.doLogIn=function(){n.logInError="",t.doLogIn(n.logInData).then(function(t){e.search("page",null),e.path(n.indexPage)},function(e){n.logInError=e.data.message})}}e.$inject=["$location","authentication"],angular.module("tutke").controller("loginInCtrl",e)}(),angular.module("tutke").filter("getFilteredStudentsRequests",function(){return function(e){return e.filter(e=>"pending"==e.status&&"studentRequest"==e.requestType)}}),angular.module("tutke").filter("getFilteredTutorsRequests",function(){return function(e){return e.filter(e=>"pending"==e.status&&"tutorOffer"==e.requestType)}});
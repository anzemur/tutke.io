!function(){angular.module("tutke",["ngRoute","ui.bootstrap"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"index/index.component.html",controller:"indexCtrl",controllerAs:"vm"}).when("/login",{templateUrl:"authentication/log-in/log-in.component.html",controller:"loginInCtrl",controllerAs:"vm"}).when("/user/:userId",{templateUrl:"user-preview/user-preview.component.html",controller:"userCtrl",controllerAs:"vm"}).otherwise({redirecTo:"/"}),t.html5Mode(!0)}])}(),angular.module("tutke").directive("foot",function(){return{restrict:"EA",templateUrl:"/shared/directives/foot/foot.component.html"}}),angular.module("tutke").directive("navigation",function(){return{restrict:"EA",templateUrl:"/shared/directives/navigation/navigation.component.html"}}),function(){function e(e,t){var n=function(t){e.localStorage.jwt=t},r=function(){return e.localStorage.jwt},o=function(){var t=r();return!!t&&JSON.parse(e.atob(t.split(".")[1])).exDate>Date.now()/1e3};return{saveToken:n,getToken:r,doRegister:function(e){return t.post("/api/register",e).then(function(e){n(e.data.token)})},doLogIn:function(e){return t.post("/api/login",e).then(function(e){n(e.data.token)})},doLogOut:function(){e.localStorage.removeItem("token")},isLoggedIn:o,getCurrentUser:function(){if(o()){var n=r(),a=JSON.parse(e.atob(n.split(".")[1]));return t.get("/api/users/"+a._id,{params:{populate:!0}})}}}}e.$inject=["$window","$http"],angular.module("tutke").service("authentication",e)}(),function(){function e(e,t){return{getLecturesPaginated:function(e){return t.get("/api/lectures/",{params:{populate:!0,page:e.page,search:e.search,lectureType:e.lectureType}})}}}e.$inject=["$window","$http"],angular.module("tutke").service("lectures",e)}(),function(){function e(e,t,n){return{updateLectureRequest:function(e,r){var o={};return o.status=e?"accepted":"denied",t.put("api/lecturesRequests/"+r,o,{headers:{Authorization:"Bearer "+n.getToken()}})},sendLectureRequest:function(e){return t.post("/api/lecturesRequests",e,{headers:{Authorization:"Bearer "+n.getToken()}})}}}e.$inject=["$window","$http","authentication"],angular.module("tutke").service("lecturesRequests",e)}(),function(){function e(e,t,n){return{getUser:function(e){return t.get("/api/users/"+e,{params:{populate:!0}})},addCommentForUserId:function(e,r){return console.log(r),t.post("/api/users/"+e+"/comments",r,{headers:{Authorization:"Bearer "+n.getToken()}})}}}e.$inject=["$window","$http","authentication"],angular.module("tutke").service("user",e)}(),(()=>{function e(e,t,n,r){var o=this;o.msgError="",o.msgSuccess="",o.msgInfo="",o.isLoggedIn=t.isLoggedIn(),o.pagination={search:"",page:0,lectureType:"posted"},o.getLecturesPaginated=function(){o.msgError="",n.getLecturesPaginated(o.pagination).then(function(e){o.lectures=e.data},function(e){o.msgError=e.data?e.data.message:e,console.log(e)})},o.answerToPendingLecture=function(e,t){o.msgError="",o.msgSuccess="",r.updateLectureRequest(e,t).then(function(n){o.msgSuccess=e?"Lecture request accepted.":"Lecture request denied.",o.user.lecturesRequests=o.user.lecturesRequests.filter(e=>e._id!=t),console.log(o.msgSuccess)},function(e){o.msgError=e.data?e.data.message:e,console.log(e)})},o.sendLectureRequest=function(e,t){o.msgError="",o.msgSuccess="",o.msgInfo="";var n={lecture:e,student:"",tutor:"",requestType:""};"tutor"==o.user.role?(n.student=t,n.tutor=o.user._id,n.lectureType="studentRequest"):(n.student=o.user._id,n.tutor=t,n.requestType="tutorOffer"),r.sendLectureRequest(n).then(function(e){o.msgSuccess="Lecture request sent."},function(e){e.data&&e.data.message&&-1!==e.data.message.indexOf("E11000 duplicate key error")?(o.msgInfo="You already sent request for this lecture.",console.log(e)):(o.msgError=e.data?e.data.message:e,console.log(e))})},o.doSearch=function(){o.pagination.page=0,o.getLecturesPaginated()},o.changeLectureType=function(e){o.pagination.lectureType!=e&&(o.pagination.lectureType="posted"==o.pagination.lectureType?"requested":"posted",o.getLecturesPaginated())},o.changePage=function(e){e?o.pagination.page++:o.pagination.page--,o.getLecturesPaginated()},o.isLoggedIn&&t.getCurrentUser().then(function(e){o.user=e.data},function(e){o.isLoggedIn=!1,t.doLogOut(),console.log(e)}),o.getLecturesPaginated()}e.$inject=["$location","authentication","lectures","lecturesRequests"],angular.module("tutke").controller("indexCtrl",e)})(),function(){function e(e,t){var n=this;n.logInData={username:"",password:""},n.logInError="",n.indexPage=e.search().page||"/",n.checkLogInData=function(){if(n.logInError="",!n.logInData.username||!n.logInData.password)return n.logInError="Please enter username and password then try again.",!1;n.doLogIn()},n.doLogIn=function(){n.logInError="",t.doLogIn(n.logInData).then(function(t){e.search("page",null),e.path(n.indexPage)},function(e){n.logInError=e.data.message})}}e.$inject=["$location","authentication"],angular.module("tutke").controller("loginInCtrl",e)}(),(()=>{function e(e,t,n){var r=this;r.userPreviewData=n,r.commentPopUp={cancelAddComment:function(){e.close()},close:function(t){e.close(t)}},r.sendingCommentData=function(){return r.commentFormError="",r.formData&&(r.formData.comment||r.formData.rating)?r.formData.comment?r.formData.rating?(console.log(r.userPreviewData.logedInUser.$$state.value.data.username),void r.addComment(r.userPreviewData.user._id,{author:r.userPreviewData.logedInUser.$$state.value.data._id,comment:r.formData.comment,rating:r.formData.rating})):(r.commentFormError="Please add a star rating!",!1):(r.commentFormError="Please add a comment!",!1):(r.commentFormError="Please write a comment and add a rating!",!1)},r.addComment=function(e,n){t.addCommentForUserId(e,{author:n.author,commentText:n.comment,rating:n.rating}).then(function(e){r.commentPopUp.close(e.data),console.log("Comment was added!")},function(e){r.commentFormError="Adding a review did not succeed, please try again!"})}}e.$inject=["$uibModalInstance","user","userPreviewData"],angular.module("tutke").controller("addCommentCtrl",e)})(),(()=>{function e(e,t,n,r,o){var a=this;a.msgError="",a.msgSuccess="",a.msgInfo="",a.isLoggedIn=t.isLoggedIn(),a.logedInUser=t.getCurrentUser(),a.userId=n.userId,a.getUser=function(){o.getUser(n.userId).then(function(e){a.previewedUser=e.data,console.log(e.data)},function(e){a.msgError=e.e,console.log(e.e)})},a.showAddReviewPopUp=function(){r.open({templateUrl:"/addCommentModalPopUp/addCommentModalPopUp.component.html",controller:"addCommentCtrl",controllerAs:"vm",resolve:{userPreviewData:function(){return{user:a.previewedUser,logedInUser:a.logedInUser}}}}).result.then(function(e){void 0!==e&&a.previewedUser.comments.push(e)},function(e){})},a.isLoggedIn&&t.getCurrentUser().then(function(e){a.user=e.data},function(e){a.isLoggedIn=!1,t.doLogOut(),console.log(e)}),a.getUser()}e.$inject=["$location","authentication","$routeParams","$uibModal","user"],angular.module("tutke").controller("userCtrl",e)})(),angular.module("tutke").filter("getFilteredStudentsRequests",function(){return function(e){return e.filter(e=>"pending"==e.status&&"studentRequest"==e.requestType)}}),angular.module("tutke").filter("getFilteredTutorsRequests",function(){return function(e){return e.filter(e=>"pending"==e.status&&"tutorOffer"==e.requestType)}});